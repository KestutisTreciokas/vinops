#!/usr/bin/env bash
set +e +u
FAIL=0

# Rule 1: .sops.yaml must exist
[ -f ".sops.yaml" ] || { echo "[FAIL] .sops.yaml missing"; FAIL=$((FAIL+1)); }

# Rule 2: Under infra/secrets, every *.sops.yaml must (a) have 'sops:' block and (b) contain 'ENC['
if [ -d "infra/secrets" ]; then
  while IFS= read -r -d '' f; do
    if ! grep -q '^sops:' "$f"; then
      echo "[FAIL] not encrypted by sops (no sops: block): $f"
      FAIL=$((FAIL+1))
    fi
    if ! grep -q 'ENC\[' "$f"; then
      echo "[FAIL] no ENC[...] payloads found in: $f"
      FAIL=$((FAIL+1))
    fi
  done < <(find infra/secrets -type f -name "*.sops.yaml" -print0)
fi

# Rule 3: Detect suspicious plaintext env files EXCLUDING sops-managed files
PLAINS=$(find . -type f \( -name ".env" -o -name ".env.*" -o -name "*.env" \) \
  ! -name "*.example" ! -name "*.sample" ! -name ".env.sops.yaml" \
  ! -path "./infra/secrets/*.sops.yaml" \
  ! -path "./.git/*" ! -path "./node_modules/*")

if [ -n "$PLAINS" ]; then
  HITS=$(grep -RInI -E '(BOT_TOKEN|ALERT_BOT_TOKEN|POSTGRES_DSN|PASSWORD|SECRET|API_KEY|PRIVATE_KEY|PAYMENTS_BASE_URL=)' -- $PLAINS 2>/dev/null)
  if [ -n "$HITS" ]; then
    echo "[FAIL] plaintext potential secrets detected:"
    echo "$HITS"
    FAIL=$((FAIL+1))
  else
    echo "[WARN] plaintext env files present but no secret-like keys detected:"
    echo "$PLAINS"
  fi
fi

# Summary
if [ "$FAIL" -ne 0 ]; then
  echo "[SUMMARY] secrets-guard FAIL=$FAIL"
  exit 1
else
  echo "[SUMMARY] secrets-guard OK"
  exit 0
fi
